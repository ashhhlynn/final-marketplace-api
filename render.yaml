databases:
  - name: postgres
    ipAllowList: []
    databaseName: final-marketplace-api
    user: final-marketplace-api

services:
  - type: web
    name: final-marketplace-api
    env: ruby
    buildCommand: "./render-build.sh"
    startCommand: "bundle exec rails s"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: postgres
          property: connectionString
      - key: RAILS_MASTER_KEY
        sync: false

Make sure all your files are saved and commit and push your changes to your repository on GitHub.:

9.Now head over to the Render website. On the Render Dashboard navigate to Blueprints and click on ‘New Blueprint Instance’:


If you haven’t connected your GitHub account to Render already, this is the time, click here to do so. Then click Connect on your chosen repository.:


Search for your GitHub repo on Render:
Here enter your unique service group name: (your app name is fine):


After that in the deploy window below, set the value of the RAILS_MASTER_KEY to the contents of your config/master.key file. Then click Apply:


Go the the Dashboard tab to see the progress it should say deploying…:

After it finishes your Rails app should be live! Make sure that your instance type is the free one by navigating to Dashboard - Settings and making sure your instance type is set to Free:


Your render URL will always be https://my-app-render.onrender.com with the my-app-render replaced by whatever you have called your app.:

At the moment when you visit your URL nothing will show up, as per this tutorial, we didn’t code any contents for our app. From this point out however, every time you push to the master branch on Github your changes will auto deploy with Render, cool right! Go add some contents and check it out.:

Hope this was helpful and have fun with Rails and Render!:

Ruby On Rails:
Render:
Deployment:
Cloud Hosting Services:
Tutorial:
1




